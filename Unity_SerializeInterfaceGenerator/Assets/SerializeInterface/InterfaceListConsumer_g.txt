using UnityEngine;
using SerializeInterface;
using System.Collections.Generic;
namespace SerializeInterface.Samples
{
    public partial class InterfaceListConsumer : MonoBehaviour, ISerializationCallbackReceiver
    {

        [SerializeField,ValidateInterface(typeof(SerializeInterface.Samples.IFoo))]
        private List<UnityEngine.Object> _fooListSerialized;
        [SerializeField,ValidateInterface(typeof(SerializeInterface.Samples.IBar))]
        private List<UnityEngine.Object> _barListSerialized;

        void ISerializationCallbackReceiver.OnBeforeSerialize()
        {
        }

        void ISerializationCallbackReceiver.OnAfterDeserialize()
        {

        _fooList.Clear();
        foreach (var obj in _fooListSerialized)
            _fooList.Add(obj as SerializeInterface.Samples.IFoo);
        if (_barList == null)
            _barList = new List<SerializeInterface.Samples.IBar>();
        _barList.Clear();
        foreach (var obj in _barListSerialized)
            _barList.Add(obj as SerializeInterface.Samples.IBar);

        }

    }
}
