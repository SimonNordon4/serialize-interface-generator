using UnityEngine;
using SerializeInterface;
using System.Collections.Generic;
namespace SerializeInterface.Samples
{
public partial class InterfaceListConsumer : MonoBehaviour, ISerializationCallbackReceiver
{
        [SerializeField,ValidateInterface(typeof(SerializeInterface.Samples.IFoo))] private List<UnityEngine.Object> _fooListSerialized;
        [SerializeField,ValidateInterface(typeof(SerializeInterface.Samples.IBar))] private List<UnityEngine.Object> _barListSerialized;
    void ISerializationCallbackReceiver.OnBeforeSerialize()
    {
    }
    void ISerializationCallbackReceiver.OnAfterDeserialize()
    {
            if (_fooList == null) _fooList = new List<SerializeInterface.Samples.IFoo>();
            else _fooList.Clear();
            foreach (var obj in _fooListSerialized)
                _fooList.Add(obj as SerializeInterface.Samples.IFoo);
            if (_barList == null) _barList = new List<SerializeInterface.Samples.IBar>();
            else _barList.Clear();
            foreach (var obj in _barListSerialized)
                _barList.Add(obj as SerializeInterface.Samples.IBar);
    }
    private SerializeInterface.Samples.IFoo InstantiateInterface(SerializeInterface.Samples.IFoo instance)
    {
        if (instance is MonoBehaviour monoInterface)
            return Object.Instantiate(monoInterface) as SerializeInterface.Samples.IFoo;
        if (instance == null)
        {
            Debug.LogError("Attempted to instantiate interface with null instance!", this);
            return null;
        }
        Debug.LogError($"Attempted to instantiate interface SerializeInterface.Samples.IFoo, but it is not a MonoBehaviour!", this);
        return null;
    }
    private SerializeInterface.Samples.IBar InstantiateInterface(SerializeInterface.Samples.IBar instance)
    {
        if (instance is MonoBehaviour monoInterface)
            return Object.Instantiate(monoInterface) as SerializeInterface.Samples.IBar;
        if (instance == null)
        {
            Debug.LogError("Attempted to instantiate interface with null instance!", this);
            return null;
        }
        Debug.LogError($"Attempted to instantiate interface SerializeInterface.Samples.IBar, but it is not a MonoBehaviour!", this);
        return null;
    }
}
}
