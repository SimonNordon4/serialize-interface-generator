using UnityEngine;
using SerializeInterface;
public partial class PrefabInterfaceConsumer : MonoBehaviour, ISerializationCallbackReceiver
{
    [SerializeField, ValidateInterface(typeof(SerializeInterface.Samples.IFoo))] private Object _fooPrefab_Object;
    public SerializeInterface.Samples.IFoo InstantiateInterface(SerializeInterface.Samples.IFoo instance)
    {
        if (instance is MonoBehaviour _fooPrefab_mono)
            return Object.Instantiate(_fooPrefab_mono) as SerializeInterface.Samples.IFoo;
        Debug.LogError($"Attempted to instantiate interface SerializeInterface.Samples.IFoo, but it is not a MonoBehaviour!", this);
        return null;
    }
    public void OnBeforeSerialize()
    {
        _fooPrefab = _fooPrefab_Object as SerializeInterface.Samples.IFoo;
    }
    public void OnAfterDeserialize()
    {
    }
}
